/*  一、
            层级选择器

            语法                        用法                            说明
            parent()                $('li').parent();              获取父级元素
            children(selector)      $('ul').children('li')         获取指定子元素
            find(selector)          $('ul').find('li')             获取指定后代元素
            siblings(selector)      $(.first).siblings('li')       获取兄弟元素
            nextAll([expr])         $('.first').nextAll()          获取当前元素之后的所有元素
            preAll([expr])          $('.first').prevAll()          获取当前元素之前的所有元素
            hasClass(class)         $('div').hasClass('current')   判断当前元素是否有指定类，返回布尔值
            eq(index)               $('li').eq(2)                  通过索引返回获取的对象集合中指定元素 
        */
        /*  二、
            jQuery 筛选选择器：
            
            语法          示例            描述
            :first      $('li:first')   获取指定元素集合中第一个元素
            :last       $('li:last')    获取指定元素集合中最后一个元素
            :eq(index)  $('li:eq(2)')   获取指定元素集合中索引号为2(第三个)的元素
            :odd        $('li:odd')     获取指定元素集合中索引号为奇数的元素
            :even       $('li:even')    获取指定元素集合中索引号为偶数的元素
        */
        /*  三、
            语法结构： $("选择器"),和CSS选择器一样用法，但是加引号  
        
            用法                  名词                  
            $("#id")           ID选择器
            $("*")             全选
            $(".class")        类选择器
            $("div")           标签选择器
            $("div,p,li")      并集选择器
            $("li.current")    交集选择器
            $("ul>li")         子选择器
            $("ul li")         后代选择器
        */
        /*  四、
            动态资源：动态变化的资源，网站信息等
            静态资源：图片，视频，代码等，在网页上不会动态变化的资源
            B/S 架构：浏览器/服务器架构模式。客户端发送请求到浏览器，浏览器请求服务器获取资源，再将资源返回到客户端
            C/S 架构：客户端/服务器架构模式。客户端发送请求到服务器，服务器响应返回给客户端。通常建立在专用的小范围网络。安全系数高，如QQ通信
            会话：
            jQuery 的顶级对象是：$
            jquery 转化为 DOM：jQuery对象[索引] 或 jQuery对象.get(索引)
            DOM 转化为 jquery：$(DOM对象)
            隐式迭代：数组调用了hide()方法,相当于数组中每一个元素调用了该方法。
            链式编程的原理：一点到底，函数的返回值是它自己
            CSS操作(读写)：(1)读：jQuery对象.css('属性');
                          (2)写：jQuery对象.css('属性',值); // 单个书写
                                 jQuery对象.css({'属性1':'值1','属性2':'值2',...}); // 多个书写，封装到对象里
            类操作(添加，删除，切换):添加:addClass();  删除:removeClass();  切换:toggleClass();
            获取索引号：$('li').index();
            show(参数1,参数2,参数3)每个参数的意义：参数1:控制动画时长   参数2:控制切换效果  参数3:回调函数,动画完成时,执行一次
            animate(参数1,参数2,参数3,参数4)每个参数的意义：
                参数1:修改的属性和值，以对象形式书写。
                参数2:动画时长
                参数3:动画切换效果
                参数4:回调函数,动画完成时,执行一次
            hover(参数1,参数2)参数意义:鼠标接触时,触发参数1;鼠标离开时,触发参数2
            hover(参数1)参数意义:鼠标接触离开都触发一次参数1
            系统自带属性的操作：jQuery对象.prop('属性');
            自定义属性的操作： jQuery对象.attr('属性');
            parents()作用：获取当前元素的父级数组
            获取指定祖先元素：jQuery对象.parents('选择器')
            获取指定子元素：jQuery对象.children('选择器');
            $.each()用法：
                    $.each(对象或数组, function (key, value) {
                        console.log(key, value);
                    });
                    jQuery对象.each(function (key, value) {
                        console.log(key, value);
                    });
            创建元素：let li = $('<li>吃鸡</li>');
            内部追加元素：(1)内部末尾追加：append();
                         (2)内部头部追加：prepend();
            插件的使用步骤及核心：
                使用步骤:
                    主页(jQuery 之家) > jQuery库 > 幻灯片和轮播图 > js和CSS3超炫酷轮播图过渡动画特效
                    主页(jQuery 之家) > jQuery库 > 瀑布流插件 > 兼容IE8的响应式网格瀑布流布局jQuery插件
                    1. 查看演示
                    2. 下载
                    3. 查看使用方法
                    4. 查看源代码，复制
                    5. 复制代码： H5, CSS, JS, 参数调整
                核心:  复制代码：H5, CSS, JS, 参数调整
            拷贝对象的函数：$.extend([是否为深拷贝],目标对象,拷贝的第一个对象,[拷贝的第二个对象...]);
            解除事件绑定的关键字：(1)解除全部事件：jQuery对象.off();
                                (2)解除指定事件：jQuery对象.off('事件类型');
                                (3)解除委托事件：jQuery对象.off('事件类型','指定对象子元素');
                                (4)触发一次自动解除：jQuery对象.one('事件类型',fn函数);
            绑定事件的关键字：on();
        */